{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/goku/Search/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport filter from \"lodash\";\nvar API_ENDPOINT = \"https://randomuser.me/api/?seed=1&page=1&results=20\";\nexport default function App() {\n  var _data$results,\n      _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fullData = _useState10[0],\n      setFullData = _useState10[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetch(API_ENDPOINT).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      setData(response.results);\n      setFullData(response.results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n  }, []);\n\n  var handleSearch = function handleSearch(text) {\n    var formattedQuery = text.toLowerCase();\n    var filteredData = filter(fullData, function (user) {\n      return contains(user, formattedQuery);\n    });\n    setData(filteredData);\n    setQuery(text);\n  };\n\n  var contains = function contains(_ref, query) {\n    var name = _ref.name,\n        email = _ref.email;\n    var first = name.first,\n        last = name.last;\n\n    if (first.includes(query) || last.includes(query) || email.includes(query)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  function renderHeader() {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: \"#fff\",\n        padding: 10,\n        marginVertical: 10,\n        borderRadius: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(TextInput, {\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      clearButtonMode: \"always\",\n      value: query,\n      onChangeText: function onChangeText(queryText) {\n        return handleSearch(queryText);\n      },\n      placeholder: \"Search\",\n      style: {\n        backgroundColor: \"#fff\",\n        paddingHorizontal: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#5500dc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Error fetching data... Check your network connection!\"));\n  }\n\n  console.log(\"the data >>>\", data);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Favorite Contacts\"), React.createElement(FlatList, {\n    data: (_data$results = data == null ? void 0 : data.results) != null ? _data$results : [],\n    keyExtractor: function keyExtractor(item) {\n      return item.first;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.listItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.metaInfo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, item.name.first + \" \" + item.name.last)));\n    },\n    ListHeaderComponent: renderHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f8f8\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 20,\n    color: \"#101010\",\n    marginTop: 60,\n    fontWeight: \"700\"\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: \"#fff\",\n    flexDirection: \"row\"\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8\n  },\n  metaInfo: {\n    marginLeft: 10\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/goku/Search/App.js"],"names":["StatusBar","React","useState","useEffect","filter","API_ENDPOINT","App","isLoading","setIsLoading","data","setData","error","setError","query","setQuery","fullData","setFullData","fetch","then","response","json","results","catch","err","handleSearch","text","formattedQuery","toLowerCase","filteredData","user","contains","name","email","first","last","includes","renderHeader","backgroundColor","padding","marginVertical","borderRadius","queryText","paddingHorizontal","flex","justifyContent","alignItems","fontSize","console","log","styles","container","item","listItem","metaInfo","title","StyleSheet","create","color","marginTop","fontWeight","paddingVertical","flexDirection","coverImage","width","height","marginLeft"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  FlatList,\n  ActivityIndicator,\n  TextInput,\n} from \"react-native\";\n\nimport filter from \"lodash\";\n\nconst API_ENDPOINT = `https://randomuser.me/api/?seed=1&page=1&results=20`;\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [fullData, setFullData] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch(API_ENDPOINT)\n      .then(response => response.json())\n      .then(response => {\n        setData(response.results);\n\n        // ADD THIS\n        setFullData(response.results);\n\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        setError(err);\n      });\n  }, []);\n\n  const handleSearch = (text) => {\n    const formattedQuery = text.toLowerCase();\n    const filteredData = filter(fullData, (user) => {\n      return contains(user, formattedQuery);\n    });\n    setData(filteredData);\n    setQuery(text);\n  };\n\n  const contains = ({ name, email }, query) => {\n    const { first, last } = name;\n\n    if (\n      first.includes(query) ||\n      last.includes(query) ||\n      email.includes(query)\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  function renderHeader() {\n    return (\n      <View\n        style={{\n          backgroundColor: \"#fff\",\n          padding: 10,\n          marginVertical: 10,\n          borderRadius: 20,\n        }}\n      >\n        <TextInput\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          clearButtonMode=\"always\"\n          value={query}\n          onChangeText={(queryText) => handleSearch(queryText)}\n          placeholder=\"Search\"\n          style={{ backgroundColor: \"#fff\", paddingHorizontal: 20 }}\n        />\n      </View>\n    );\n  }\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator size=\"large\" color=\"#5500dc\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ fontSize: 18 }}>\n          Error fetching data... Check your network connection!\n        </Text>\n      </View>\n    );\n  }\n\n  console.log(\"the data >>>\", data);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Favorite Contacts</Text>\n      <FlatList\n        data={data?.results ?? []}\n        keyExtractor={(item) => item.first}\n        renderItem={({ item }) => (\n          <View style={styles.listItem}>\n            <View style={styles.metaInfo}>\n              <Text\n                style={styles.title}\n              >{`${item.name.first} ${item.name.last}`}</Text>\n            </View>\n          </View>\n        )}\n        ListHeaderComponent={renderHeader}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f8f8\",\n    alignItems: \"center\",\n  },\n  text: {\n    fontSize: 20,\n    color: \"#101010\",\n    marginTop: 60,\n    fontWeight: \"700\",\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: \"#fff\",\n    flexDirection: \"row\",\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n  },\n  metaInfo: {\n    marginLeft: 10,\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}