{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/goku/Search/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport filter from \"lodash.filter\";\nvar API_ENDPOINT = \"https://raw.githubusercontent.com/samayo/country-json/master/src/country-by-name.json\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fullData = _useState10[0],\n      setFullData = _useState10[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetch(API_ENDPOINT).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      setData(response);\n      setFullData(response);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n  }, []);\n\n  var handleSearch = function handleSearch(text, active) {\n    var formattedQuery = text.toLowerCase();\n    var filteredData = filter(fullData, function (user) {\n      return contains(user, formattedQuery);\n    });\n    setData(filteredData);\n    setQuery(text);\n  };\n\n  var contains = function contains(_ref, query) {\n    var country = _ref.country;\n\n    if (country.includes(query)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#5500dc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Error fetching data... Check your network connection!\"));\n  }\n\n  console.log(\"the data >>>\", data);\n  console.log(\"Full datttaaa\", fullData);\n\n  function RenderHeader() {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: \"#38523f\",\n        padding: 7,\n        marginVertical: 0,\n        borderRadius: 10,\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, React.createElement(TextInput, {\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      clearButtonMode: \"always\",\n      value: query,\n      onChangeText: function onChangeText(queryText) {\n        return handleSearch(queryText);\n      },\n      placeholder: \"Search\",\n      style: {\n        backgroundColor: \"#a8a271\",\n        paddingHorizontal: 20,\n        borderRadius: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Favorite Contacts\")), React.createElement(View, {\n    style: {\n      height: 296,\n      borderBottomWidth: 0,\n      borderRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginRight: 10,\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(RenderHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }))), query ? React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.last;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.metaInfo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, item.country));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"No Data\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#38523f\"\n  },\n  text: {\n    fontSize: 20,\n    color: \"#101010\",\n    marginTop: 70,\n    fontWeight: \"700\"\n  },\n  listItem: {\n    marginTop: 90,\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n    backgroundColor: \"#fff\"\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n    borderWidth: 0.5\n  },\n  metaInfo: {\n    marginLeft: 0,\n    borderRadius: 5,\n    borderWidth: 0.5\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/goku/Search/App.js"],"names":["React","useState","useEffect","filter","API_ENDPOINT","App","isLoading","setIsLoading","data","setData","error","setError","query","setQuery","fullData","setFullData","fetch","then","response","json","catch","err","handleSearch","text","active","formattedQuery","toLowerCase","filteredData","user","contains","country","includes","flex","justifyContent","alignItems","backgroundColor","fontSize","console","log","RenderHeader","padding","marginVertical","borderRadius","marginTop","queryText","paddingHorizontal","styles","container","height","borderBottomWidth","marginRight","marginLeft","item","last","metaInfo","title","StyleSheet","create","color","fontWeight","listItem","paddingVertical","coverImage","width","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  FlatList,\n  ActivityIndicator,\n  TextInput,\n} from \"react-native\";\n\nimport filter from \"lodash.filter\";\n\nconst API_ENDPOINT = `https://raw.githubusercontent.com/samayo/country-json/master/src/country-by-name.json`;\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [fullData, setFullData] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch(API_ENDPOINT)\n      .then((response) => response.json())\n      .then((response) => {\n        setData(response);\n\n        // ADD THIS\n        setFullData(response);\n\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setError(err);\n      });\n  }, []);\n\n  const handleSearch = (text, active) => {\n    const formattedQuery = text.toLowerCase();\n    const filteredData = filter(fullData, (user) => {\n      return contains(user, formattedQuery);\n    });\n    setData(filteredData);\n    setQuery(text);\n  };\n\n  const contains = ({ country }, query) => {\n    // const { first, last } = name;\n\n    if (country.includes(query)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  if (isLoading) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"grey\",\n        }}\n      >\n        <ActivityIndicator size=\"large\" color=\"#5500dc\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ fontSize: 18 }}>\n          Error fetching data... Check your network connection!\n        </Text>\n      </View>\n    );\n  }\n\n  console.log(\"the data >>>\", data);\n  console.log(\"Full datttaaa\", fullData);\n  function RenderHeader() {\n    return (\n      <View\n        style={{\n          backgroundColor: \"#38523f\",\n          padding: 7,\n          marginVertical: 0,\n          borderRadius: 10,\n          marginTop: 20,\n        }}\n      >\n        <TextInput\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          clearButtonMode=\"always\"\n          value={query}\n          onChangeText={(queryText) => handleSearch(queryText)}\n          placeholder=\"Search\"\n          style={{\n            backgroundColor: \"#a8a271\",\n            paddingHorizontal: 20,\n            borderRadius: 10,\n          }}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{ alignItems: \"center\" }}>\n        <Text style={styles.text}>Favorite Contacts</Text>\n      </View>\n      <View style={{ height: 296, borderBottomWidth: 0, borderRadius: 0 }}>\n        <View style={{ marginRight: 10, marginLeft: 10 }}>\n          <>\n            <RenderHeader />\n          </>\n        </View>\n        {query ? (\n          <FlatList\n            data={data}\n            keyExtractor={(item) => item.last}\n            renderItem={({ item }) => (\n              <View style={styles.metaInfo}>\n                <Text style={styles.title}>{item.country}</Text>\n              </View>\n            )}\n          />\n        ) : (\n          <View style={{ alignItems: \"center\" }}>\n            <Text style={{ fontSize: 20 }}>No Data</Text>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#38523f\",\n    // alignItems: \"center\",\n  },\n  text: {\n    fontSize: 20,\n    color: \"#101010\",\n    marginTop: 70,\n    fontWeight: \"700\",\n  },\n  listItem: {\n    marginTop: 90,\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n    backgroundColor: \"#fff\",\n    // flexDirection: \"row\",\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n    borderWidth: 0.5,\n  },\n  metaInfo: {\n    marginLeft: 0,\n\n    borderRadius: 5,\n    borderWidth: 0.5,\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}