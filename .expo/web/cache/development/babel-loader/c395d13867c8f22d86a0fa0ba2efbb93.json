{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/goku/Search/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar data1 = [{\n  id: \"1\",\n  title: \"First item\"\n}, {\n  id: \"2\",\n  title: \"second item\"\n}, {\n  id: \"3\",\n  title: \"third item \"\n}, {\n  id: \"4\",\n  title: \"fourth item\"\n}];\nvar API_ENDPOINT = \"https://randomuser.me/api/?seed=1&page=1&results=20\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetch(API_ENDPOINT).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      console.log(\"hii\");\n      setData(results);\n      console.log(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#5500dc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Error fetching data... Check your network connection!\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Favorite Contacts\"), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.first;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.listItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.picture.thumbnail\n        },\n        style: styles.coverImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.metaInfo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, item.name.first + \" \" + item.name.last)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f8f8\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 20,\n    color: \"#101010\",\n    marginTop: 60,\n    fontWeight: \"700\"\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: \"#fff\",\n    flexDirection: \"row\"\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8\n  },\n  metaInfo: {\n    marginLeft: 10\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/goku/Search/App.js"],"names":["StatusBar","React","useState","useEffect","data1","id","title","API_ENDPOINT","App","isLoading","setIsLoading","data","setData","error","setError","fetch","then","response","json","results","console","log","catch","err","flex","justifyContent","alignItems","fontSize","styles","container","text","item","first","listItem","uri","picture","thumbnail","coverImage","metaInfo","name","last","StyleSheet","create","backgroundColor","color","marginTop","fontWeight","paddingVertical","paddingHorizontal","flexDirection","width","height","borderRadius","marginLeft","padding"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  FlatList,\n  ActivityIndicator,\n  Image,\n} from \"react-native\";\n\nconst data1 = [\n  { id: \"1\", title: \"First item\" },\n  { id: \"2\", title: \"second item\" },\n  { id: \"3\", title: \"third item \" },\n  { id: \"4\", title: \"fourth item\" },\n];\n\nconst API_ENDPOINT = `https://randomuser.me/api/?seed=1&page=1&results=20`;\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(API_ENDPOINT)\n      .then((response) => response.json())\n      .then((results) => {\n        console.log(\"hii\");\n        setData(results);\n        console.log(results);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setError(err);\n      });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator size=\"large\" color=\"#5500dc\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ fontSize: 18 }}>\n          Error fetching data... Check your network connection!\n        </Text>\n      </View>\n    );\n  }\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Favorite Contacts</Text>\n      <FlatList\n        data={data}\n        keyExtractor={(item) => item.first}\n        renderItem={({ item }) => (\n          <View style={styles.listItem}>\n            <Image\n              source={{ uri: item.picture.thumbnail }}\n              style={styles.coverImage}\n            />\n            <View style={styles.metaInfo}>\n              <Text\n                style={styles.title}\n              >{`${item.name.first} ${item.name.last}`}</Text>\n            </View>\n          </View>\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f8f8\",\n    alignItems: \"center\",\n  },\n  text: {\n    fontSize: 20,\n    color: \"#101010\",\n    marginTop: 60,\n    fontWeight: \"700\",\n  },\n  listItem: {\n    marginTop: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    backgroundColor: \"#fff\",\n    flexDirection: \"row\",\n  },\n  coverImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n  },\n  metaInfo: {\n    marginLeft: 10,\n  },\n  title: {\n    fontSize: 18,\n    width: 200,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}